/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractOptions, Options } from "web3-eth-contract";
import { Block } from "web3-eth";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { Callback, TransactionObject } from "./types";

export class BoosterPack extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  methods: {
    balanceOf(_owner: string): TransactionObject<string>;

    allowance(_owner: string, _spender: string): TransactionObject<string>;

    approve(
      _spender: string,
      _value: number | string
    ): TransactionObject<boolean>;

    transferFrom(
      _from: string,
      _to: string,
      _value: number | string
    ): TransactionObject<boolean>;

    decreaseApproval(
      _spender: string,
      _subtractedValue: number | string
    ): TransactionObject<boolean>;

    renounceOwnership(): TransactionObject<void>;

    finishMinting(): TransactionObject<boolean>;

    transfer(_to: string, _value: number | string): TransactionObject<boolean>;

    increaseApproval(
      _spender: string,
      _addedValue: number | string
    ): TransactionObject<boolean>;

    transferOwnership(_newOwner: string): TransactionObject<void>;

    mint(_to: string, _amount: number | string): TransactionObject<boolean>;

    addValidator(newValidator: string): TransactionObject<void>;

    mintingFinished(): TransactionObject<boolean>;
    name(): TransactionObject<string>;
    totalSupply(): TransactionObject<string>;
    INITIAL_SUPPLY(): TransactionObject<string>;
    decimals(): TransactionObject<string>;
    owner(): TransactionObject<string>;
    symbol(): TransactionObject<string>;
  };
  events: {
    Mint(
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ): EventEmitter;

    MintFinished(
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ): EventEmitter;

    OwnershipRenounced(
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ): EventEmitter;

    OwnershipTransferred(
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ): EventEmitter;

    Approval(
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ): EventEmitter;

    Transfer(
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ): EventEmitter;

    allEvents: (
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
